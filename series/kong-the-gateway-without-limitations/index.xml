<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kong - The Gateway without Limitations on Technology Blog</title>
    <link>https://nttdata-dach.github.io/series/kong-the-gateway-without-limitations/</link>
    <description>Recent content in Kong - The Gateway without Limitations on Technology Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2024 NTT DATA Deutschland SE - This site does not use any cookies</copyright>
    <lastBuildDate>Tue, 20 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nttdata-dach.github.io/series/kong-the-gateway-without-limitations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Part 4: SAML 2.0 Bearer Assertion Flow for OAuth 2.0</title>
      <link>https://nttdata-dach.github.io/posts/as-konggateway-saml2bearer/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-konggateway-saml2bearer/</guid>
      <description>My last blog provided a solution for implementing an OAuth 2.0-based On-Behalf-Of (delegation) grant flow. This time itâ€™s about implementing a Security Assertion Markup Language (SAML) 2.0 Profile for OAuth 2.0 Client Authentication and Authorization Grants. This flow allows OAuth 2.0 clients to obtain access tokens by presenting SAML 2.0 assertions as a form of authentication. This somewhat extended grant flow expands the scope for exchanging authentication and authorization data between different parties with seamless management, all achieved through the API Gateway.</description>
    </item>
    <item>
      <title>Part 3: Token Exchange On-Behalf-Of</title>
      <link>https://nttdata-dach.github.io/posts/as-konggateway-onbehalfof/</link>
      <pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-konggateway-onbehalfof/</guid>
      <description>In the last blog, I provided a solution on how to overcome the character limit when logging. This time, I would like to show how to implement an OAuth 2.0-based On-Behalf-Of (delegation) grant flow. Such complex token orchestration tasks can be easily handled on the API gateway while ensuring the highest security standards which even make zero-trust architectures possible in the first place.</description>
    </item>
    <item>
      <title>Part 2: Log Chunking</title>
      <link>https://nttdata-dach.github.io/posts/as-konglogchunking/</link>
      <pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-konglogchunking/</guid>
      <description>In the last blog, I briefly introduced Kong as a sophisticated API gateway product. This time, I will discuss a problem related to logging message size limitation and offer a solution. This problem significantly limits root cause analysis and ultimately solution development.</description>
    </item>
    <item>
      <title>Part 1: Brief Product Introduction</title>
      <link>https://nttdata-dach.github.io/posts/as-kongproductintroduction/</link>
      <pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-kongproductintroduction/</guid>
      <description>Kong Gateway is a lightweight, fast, and flexible API Gateway. It acts as an intermediary between API providers and consumers, enabling them to communicate based on policies. It also provides observability features, allowing to track API usage and performance. Overall it is a convincing and outstanding product which is briefly introduced in the following blog.</description>
    </item>
  </channel>
</rss>
