<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PDK on Technology Blog</title>
    <link>https://nttdata-dach.github.io/tags/pdk/</link>
    <description>Recent content in PDK on Technology Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright 2025 NTT DATA Deutschland SE - This site does not use any cookies</copyright>
    <lastBuildDate>Wed, 27 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nttdata-dach.github.io/tags/pdk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Part 5: mTLS Header</title>
      <link>https://nttdata-dach.github.io/posts/as-konggateway-mtls_header/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-konggateway-mtls_header/</guid>
      <description>Mutual transport layer security (mTLS) with consumer authentication using client certificates at the Kong Gateway plays an important role in building a zero-trust architecture. But perimeter security devices that perform TLS termination, so-called TLS terminating reverse proxies (TTRP), break the automatic mapping of client certificates to Kong consumers. This blog demonstrates mTLS consumer authentication even with preceding TTRPs, without requiring TCP passthrough.</description>
    </item>
    <item>
      <title>Part 4: SAML 2.0 Bearer Assertion Flow for OAuth 2.0</title>
      <link>https://nttdata-dach.github.io/posts/as-konggateway-saml2bearer/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-konggateway-saml2bearer/</guid>
      <description>My last blog provided a solution for implementing an OAuth 2.0-based On-Behalf-Of (delegation) grant flow. This time itâ€™s about implementing a Security Assertion Markup Language (SAML) 2.0 Profile for OAuth 2.0 Client Authentication and Authorization Grants. This flow allows OAuth 2.0 clients to obtain access tokens by presenting SAML 2.0 assertions as a form of authentication. This somewhat extended grant flow expands the scope for exchanging authentication and authorization data between different parties with seamless management, all achieved through the API Gateway.</description>
    </item>
    <item>
      <title>Part 3: Token Exchange On-Behalf-Of</title>
      <link>https://nttdata-dach.github.io/posts/as-konggateway-onbehalfof/</link>
      <pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-konggateway-onbehalfof/</guid>
      <description>In the last blog, I provided a solution on how to overcome the character limit when logging. This time, I would like to show how to implement an OAuth 2.0-based On-Behalf-Of (delegation) grant flow. Such complex token orchestration tasks can be easily handled on the API gateway while ensuring the highest security standards which even make zero-trust architectures possible in the first place.</description>
    </item>
  </channel>
</rss>
