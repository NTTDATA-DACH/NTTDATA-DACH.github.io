<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JWT Signer on Technology Blog</title>
    <link>https://nttdata-dach.github.io/tags/jwt-signer/</link>
    <description>Recent content in JWT Signer on Technology Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2024 NTT DATA Deutschland SE - This site does not use any cookies</copyright>
    <lastBuildDate>Wed, 03 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nttdata-dach.github.io/tags/jwt-signer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Part 7: Token Cloning</title>
      <link>https://nttdata-dach.github.io/posts/as-konggateway-tokencloning/</link>
      <pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://nttdata-dach.github.io/posts/as-konggateway-tokencloning/</guid>
      <description>Building on the previous post, we discuss an architectural pattern for token handling called &amp;rsquo;therapeutic token cloning&amp;rsquo;, which is particularly effective in environments that use multiple identity and access management products. The pattern involves duplicating, correcting, and then re-signing access tokens to make them functional and more secure. This article details the steps involved in the token cloning process, as well as the pros and cons of this approach.</description>
    </item>
  </channel>
</rss>
